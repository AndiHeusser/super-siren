{"version":3,"sources":["lib/LinkedSubEntity.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;yBAAsB,WAAW;;;;sBACnB,QAAQ;;;;;;;;;IAMhB,eAAe;WAAf,eAAe;;UAAf,eAAe;wBAAf,eAAe;;6BAAf,eAAe;;;cAAf,eAAe;;;;;;;;;;SAaL,kBAAC,IAAI,EAAE;AACrB,OAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,oBAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;AAC/D,UAAM,IAAI,KAAK,CAAC,6EAA6E,CAAC,CAAC;IAC/F;;AAED,OAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACf,UAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;IAC9D;;AAED,UAAO,KAAK,CAAC,aAAa,CAAC,UAAA,GAAG,EAAI;AACjC,OAAG,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,uBAAU,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7C,OAAG,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AACvC,OAAG,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,uBAAU,GAAG,CAAC,IAAI,SAAM,IAAI,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC;GACH;;;;;;;;OAMe,eAAG;AAClB,UAAO,KAAK,CAAC;GACb;;;QAnCI,eAAe;GAAS,uBAAU,MAAM,CAAC;AAC9C,KAAI,EAAE,IAAI,uBAAU,GAAG,EAAE;AACzB,QAAO,EAAE,IAAI,uBAAU,GAAG,EAAE;AAC5B,KAAI,EAAE,IAAI;CACV,CAAC;;AAkCF,IAAI,KAAK,GAAG,IAAI,eAAe,EAAE,CAAC;;qBAEnB,eAAe","file":"lib/LinkedSubEntity.js","sourcesContent":["import Immutable from 'immutable';\r\nimport _ from 'lodash';\r\n\r\n/**\r\n * Represents an sub-entity of an entity which is represented\r\n * as a URL to the actual entity instance.\r\n */\r\nclass LinkedSubEntity extends Immutable.Record({\r\n\trels: new Immutable.Set(),\r\n\tclasses: new Immutable.Set(),\r\n\thref: null\r\n}) {\r\n\r\n\t/**\r\n\t * Parses the provided json instance and returns\r\n\t * the LinkedSubEntity representation of that json\r\n\t *\r\n\t * @param  {Object} json Object representation of the linked sub-entity\r\n\t * @return {LinkedSubEntity}      Parsed representation of the linked sub-entity.\r\n\t */\r\n\tstatic fromJson(json) {\r\n\t\tif (!json.rel || !_.isArray(json.rel) || json.rel.length === 0) {\r\n\t\t\tthrow new Error('A rel array with at least one rel is required to create a linked sub entity');\r\n\t\t}\r\n\r\n\t\tif (!json.href) {\r\n\t\t\tthrow new Error('a href is required for a linked sub entity');\r\n\t\t}\r\n\r\n\t\treturn empty.withMutations(map => {\r\n\t\t\tmap.set('rels', new Immutable.Set(json.rel));\r\n\t\t\tmap.set('href', json.href || map.href);\r\n\t\t\tmap.set('classes', new Immutable.Set(json.class || []));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Default empty instance of a LinkedSubEntity\r\n\t * @return {LinkedSubEntity} Default empty state\r\n\t */\r\n\tstatic get empty() {\r\n\t\treturn empty;\r\n\t}\r\n}\r\n\r\nvar empty = new LinkedSubEntity();\r\n\r\nexport default LinkedSubEntity;\r\n"],"sourceRoot":"/source/"}